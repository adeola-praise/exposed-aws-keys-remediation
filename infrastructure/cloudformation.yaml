AWSTemplateFormatVersion: '2010-09-09'
Description: CloudFormation template to deploy Lambda for exposed AWS key remediation with Slack notifications

Resources:

  # IAM Role for Lambda Function with necessary permissions
  LambdaExecutionRole:
    Type: AWS::IAM::Role
    Properties: 
      AssumeRolePolicyDocument: 
        Version: "2012-10-17"
        Statement:
          - Effect: "Allow"
            Action: "sts:AssumeRole"
            Principal:
              Service: "lambda.amazonaws.com"
      Policies:
        - PolicyName: LambdaLogsAndIAMAccess
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: "Allow"
                Action:
                  - "iam:ListAccessKeys"
                  - "iam:UpdateAccessKey"
                  - "logs:DescribeLogGroups"
                  - "logs:FilterLogEvents"
                Resource: "*"

  # Lambda Function to handle exposed key remediation
  ExposedKeyRemediationFunction:
    Type: AWS::Lambda::Function
    Properties:
      Handler: "lambda_function.lambda_handler"
      Role: !GetAtt LambdaExecutionRole.Arn
      FunctionName: "ExposedKeyRemediation"
      Runtime: "python3.9"
      Code:
        S3Bucket: "YOUR_BUCKET_NAME"  # Replace with your S3 bucket where Lambda code is stored
        S3Key: "lambda/exposed_key_remediation.zip"  # Replace with actual path to your Lambda code in S3
      MemorySize: 128
      Timeout: 60
      Environment:
        Variables:
          SLACK_WEBHOOK_URL: "https://hooks.slack.com/services/your/slack/webhook/url"  # Replace with your Slack Webhook URL

  # EventBridge Rule to trigger the Lambda function on event
  ExposedKeyEventRule:
    Type: AWS::Events::Rule
    Properties:
      Name: "ExposedKeyEventRule"
      EventPattern:
        Source:
          - "aws.health"
        DetailType:
          - "AWS Health Event"
        Detail:
          eventTypeCode:
            - "AWS_RISK_CREDENTIALS_COMPROMISED"
            - "AWS_RISK_CREDENTIALS_COMPROMISE_SUSPECTED"
            - "AWS_RISK_CREDENTIALS_EXPOSED"
            - "AWS_RISK_CREDENTIALS_EXPOSURE_SUSPECTED"
            - "AWS_RISK_IAM_QUARANTINE"
          service: ["RISK"]
          eventTypeCategory: ["issue"]
      Targets:
        - Arn: !GetAtt ExposedKeyRemediationFunction.Arn
          Id: "ExposedKeyRemediationTarget"
          Input: '{}'

  # CloudWatch Log Group for Lambda Logs
  LambdaLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: "/aws/lambda/ExposedKeyRemediation"
      RetentionInDays: 14

Outputs:
  LambdaFunctionName:
    Description: "The name of the Lambda function"
    Value: !Ref ExposedKeyRemediationFunction

  EventBridgeRuleName:
    Description: "The name of the EventBridge rule"
    Value: !Ref ExposedKeyEventRule

  LambdaLogGroupName:
    Description: "The CloudWatch Log Group for Lambda"
    Value: !Ref LambdaLogGroup
